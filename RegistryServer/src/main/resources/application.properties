spring.application.name=RegistryServer

# Server Port (Default Eureka port is 8761)
server.port=8761

eureka.client.register-with-eureka=false
# Tell Eureka not to fetch registry information from another Eureka server (it is the master)
eureka.client.fetch-registry=false
# This is needed if you don't specify register-with-eureka and fetch-registry
# and want to run a standalone Eureka server.
# For a standalone server, serviceUrl.defaultZone is not strictly needed for itself,
# but clients will use it.
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# Optional: For a more resilient setup in a cluster, you might point to peers.
# For a single node, the above is fine.

# Optional: Disable self-preservation mode if you want instances to be evicted more quickly during network issues (use with caution)
# eureka.server.enable-self-preservation=false
# Optional: How often the server expects client heartbeats
# eureka.server.expected-client-renewal-interval-seconds=30
# Optional: How often the server evicts expired instances
# eureka.server.eviction-interval-timer-in-ms=60000

# --- Actuator Exposure for Eureka Server ---
management.endpoints.web.exposure.include=health,info,env
management.endpoint.health.show-details=always